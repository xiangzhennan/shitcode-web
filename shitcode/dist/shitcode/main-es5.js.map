{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///src/app/components/question/question.component.html","webpack:///src/app/components/question/question.component.ts","webpack:///src/app/components/welcome/welcome.component.ts","webpack:///src/app/components/welcome/welcome.component.html","webpack:///src/app/data.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/components/report/report.component.ts","webpack:///src/app/components/report/report.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","QuestionComponent","dataService","flag","data","questionId","principle","realPrinciple","options","optionId","content","correctId","historyCorrectNum","historyAnswerNum","getAll","subscribe","console","log","error","alert","elementById","document","getElementById","innerHTML","getNextQuestion","checkAnswer","WelcomeComponent","DataService","httpClient","REST_API_QUESTION","REST_API_REPORT","id","url","get","correctNum","AppComponent","title","ReportComponent","accuracy","badge","getReport","AppModule","routes","path","component","AppRoutingModule","forRoot","bootstrapModule","err","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<p id=\"principle\">{{data.principle}}</p>\n<p>{{flag}}</p>\n<hr>\n\n<div>\n\n  <span *ngFor=\"let item of data.options\" class = \"questionContent\">\n    {{item.optionId}}\n\n    <p>{{item.content}}</p>\n  </span>\n\n  <hr>\n\n  <button type=\"button\" routerLink=\"/question\" (click)=\"getNextQuestion()\">next question</button>\n  <button type=\"button\" (click)=\"checkAnswer()\">confirm</button>\n  <button type=\"button\" routerLink=\"/report\">get report</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {DataService} from '../../data.service';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n\n  public flag = 1;\n\n  public data: any =  {\n      questionId: 1,\n      principle: 'shitcode rule one: use variable name with no actual meaning',\n      realPrinciple: 'coding rule one: use variable with valid meaning',\n      options: [{\n        optionId: 1,\n        content: 'int i = 0',\n      },\n        {optionId: 2,\n          content: 'int numOfStudent = 0',\n        }],\n      correctId: 2,\n      historyCorrectNum: 5,\n      historyAnswerNum: 10\n    };\n\n  constructor( private dataService: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  getNextQuestion(): void {\n    this.dataService.getAll(2).subscribe(\n      data => {\n        this.data = data;\n        console.log(data);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  // tslint:disable-next-line:typedef\n  checkAnswer() {\n    this.flag = 2;\n    alert('thanks for answer');\n    const elementById = document.getElementById('principle');\n    if (elementById != null){\n      elementById.innerHTML = this.data.realPrinciple;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <p>welcome to shit-code, click to start</p>\n\n  <button type=\"button\" [routerLink]=\" ['/question']\">\n    start here\n  </button>\n</div>\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { map, filter, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private REST_API_QUESTION = 'http://localhost:3000/api/question?id=';\n  private REST_API_REPORT = 'http://localhost:3000/api/report?correctNum=';\n\n  constructor(private httpClient: HttpClient) { }\n\n\n  public getAll(id: number){\n    const url = this.REST_API_QUESTION + id;\n    return this.httpClient.get(url);\n  }\n\n  public getReport(correctNum: number){\n    const url = this.REST_API_REPORT + correctNum;\n    return this.httpClient.get(url);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'shitcode';\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../data.service';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n\n  public data: any =  {\n    correctNum: 5,\n    accuracy: 50,\n    badge: 'Try harder'\n  };\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  retrieveData(): void {\n    this.dataService.getReport(2).subscribe(\n      data => {\n        this.data = data;\n        console.log(data);\n      },\n      error => {\n        console.log(error);\n      });\n  }\n\n}\n","<p>report works!</p>\n\n<button type=\"button\" routerLink=\"/question\">review answers</button>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DataService} from './data.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './components/welcome/welcome.component';\nimport { QuestionComponent } from './components/question/question.component';\nimport { ReportComponent } from './components/report/report.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    QuestionComponent,\n    ReportComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {WelcomeComponent} from './components/welcome/welcome.component';\nimport {ReportComponent} from './components/report/report.component';\nimport {QuestionComponent} from './components/question/question.component';\n\nconst routes: Routes = [\n  {path: 'question', component: QuestionComponent},\n  {path: 'report', component: ReportComponent},\n  {path: '**', component: WelcomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}