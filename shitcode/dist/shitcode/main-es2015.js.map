{"version":3,"sources":["./src/environments/environment.ts","./src/app/components/question/question.component.html","./src/app/components/question/question.component.ts","./src/app/components/welcome/welcome.component.ts","./src/app/components/welcome/welcome.component.html","./src/app/data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/components/report/report.component.ts","./src/app/components/report/report.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;;;;;;ICTjE,0EAAkE;IAChE,uDAEA;IAAA,oEAAG;IAAA,uDAAgB;IAAA,4DAAI;IACzB,4DAAO;;;IAHL,0DAEA;IAFA,4FAEA;IAAG,0DAAgB;IAAhB,gFAAgB;;ACDhB,MAAM,iBAAiB;IAoB5B,YAAqB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAlBtC,SAAI,GAAG,CAAC,CAAC;QAET,SAAI,GAAS;YAChB,UAAU,EAAE,CAAC;YACb,SAAS,EAAE,6DAA6D;YACxE,aAAa,EAAE,kDAAkD;YACjE,OAAO,EAAE,CAAC;oBACR,QAAQ,EAAE,CAAC;oBACX,OAAO,EAAE,WAAW;iBACrB;gBACC,EAAC,QAAQ,EAAE,CAAC;oBACV,OAAO,EAAE,sBAAsB;iBAChC,CAAC;YACJ,SAAS,EAAE,CAAC;YACZ,iBAAiB,EAAE,CAAC;YACpB,gBAAgB,EAAE,EAAE;SACrB,CAAC;IAE6C,CAAC;IAElD,QAAQ;IACR,CAAC;IAED,eAAe;QACb,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAClC,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CACF,CAAC;IACJ,CAAC;IAED,mCAAmC;IACnC,WAAW;QACT,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;QACd,KAAK,CAAC,mBAAmB,CAAC,CAAC;QAC3B,MAAM,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,WAAW,CAAC,CAAC;QACzD,IAAI,WAAW,IAAI,IAAI,EAAC;YACtB,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;SACjD;IACH,CAAC;;kFA7CU,iBAAiB;iGAAjB,iBAAiB;QDR9B,uEAAkB;QAAA,uDAAkB;QAAA,4DAAI;QACxC,oEAAG;QAAA,uDAAQ;QAAA,4DAAI;QACf,gEAAI;QAEJ,sEAAK;QAEH,+GAIO;QAEP,gEAAI;QAEJ,4EAAyE;QAA5B,yIAAS,qBAAiB,IAAC;QAAC,wEAAa;QAAA,4DAAS;QAC/F,6EAA8C;QAAxB,0IAAS,iBAAa,IAAC;QAAC,mEAAO;QAAA,4DAAS;QAC9D,6EAA2C;QAAA,sEAAU;QAAA,4DAAS;QAChE,4DAAM;;QAjBY,0DAAkB;QAAlB,mFAAkB;QACjC,0DAAQ;QAAR,yEAAQ;QAKc,0DAAe;QAAf,qFAAe;;;;;;;;;;;;;;;;;;;;;AECjC,MAAM,gBAAgB;IAE3B,gBAAgB,CAAC;IAEjB,QAAQ;IACR,CAAC;;gFALU,gBAAgB;gGAAhB,gBAAgB;QCP7B,sEAAK;QACH,oEAAG;QAAA,+FAAoC;QAAA,4DAAI;QAE3C,4EAAoD;QAClD,uEACF;QAAA,4DAAS;QACX,4DAAM;;QAHkB,0DAA6B;QAA7B,6IAA6B;;;;;;;;;;;;;;;;;;;;ACM9C,MAAM,WAAW;IAKtB,YAAoB,UAAsB;QAAtB,eAAU,GAAV,UAAU,CAAY;QAHlC,sBAAiB,GAAG,wCAAwC,CAAC;QAC7D,oBAAe,GAAG,8CAA8C,CAAC;IAE3B,CAAC;IAGxC,MAAM,CAAC,EAAU;QACtB,MAAM,GAAG,GAAG,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;QACxC,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;IAEM,SAAS,CAAC,UAAkB;QACjC,MAAM,GAAG,GAAG,IAAI,CAAC,eAAe,GAAG,UAAU,CAAC;QAC9C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IAClC,CAAC;;sEAhBU,WAAW;8FAAX,WAAW,WAAX,WAAW,mBAFV,MAAM;;;;;;;;;;;;;;;;;;;ACAb,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,UAAU,CAAC;KACpB;;wEAFY,YAAY;4FAAZ,YAAY;QCPzB,2EAA+B;;;;;;;;;;;;;;;;;;;;;;ACQxB,MAAM,eAAe;IAQ1B,YAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QANrC,SAAI,GAAS;YAClB,UAAU,EAAE,CAAC;YACb,QAAQ,EAAE,EAAE;YACZ,KAAK,EAAE,YAAY;SACpB,CAAC;IAE8C,CAAC;IAEjD,QAAQ;IACR,CAAC;IAGD,YAAY;QACV,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,SAAS,CACrC,IAAI,CAAC,EAAE;YACL,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QACpB,CAAC,EACD,KAAK,CAAC,EAAE;YACN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC;;8EAvBU,eAAe;+FAAf,eAAe;QCR5B,oEAAG;QAAA,wEAAa;QAAA,4DAAI;QAEpB,4EAA6C;QAAA,yEAAc;QAAA,4DAAS;;;;;;;;;;;;;;ACDpE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AACJ;AACX;AAEa;AACT;AAC2B;AACG;AACN;;AAiBhE,MAAM,SAAS;;wFAAT,SAAS,cAFR,2DAAY;4IAEb,SAAS,mBAHT,CAAC,yDAAW,CAAC,YALf;YACP,uEAAa;YACb,oEAAgB;YAChB,qEAAgB;SACjB;mIAIU,SAAS,mBAblB,2DAAY;QACZ,sFAAgB;QAChB,yFAAiB;QACjB,mFAAe,aAGf,uEAAa;QACb,oEAAgB;QAChB,qEAAgB;;;;;;;;;;;;;ACpBpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAuD;AACiB;AACH;AACM;;;AAE3E,MAAM,MAAM,GAAW;IACrB,EAAC,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,yFAAiB,EAAC;IAChD,EAAC,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,mFAAe,EAAC;IAC5C,EAAC,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,sFAAgB,EAAC;CAC1C,CAAC;AAMK,MAAM,gBAAgB;;+FAAhB,gBAAgB;0JAAhB,gBAAgB,kBAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACduB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","<p id=\"principle\">{{data.principle}}</p>\n<p>{{flag}}</p>\n<hr>\n\n<div>\n\n  <span *ngFor=\"let item of data.options\" class = \"questionContent\">\n    {{item.optionId}}\n\n    <p>{{item.content}}</p>\n  </span>\n\n  <hr>\n\n  <button type=\"button\" routerLink=\"/question\" (click)=\"getNextQuestion()\">next question</button>\n  <button type=\"button\" (click)=\"checkAnswer()\">confirm</button>\n  <button type=\"button\" routerLink=\"/report\">get report</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport {DataService} from '../../data.service';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n\n  public flag = 1;\n\n  public data: any =  {\n      questionId: 1,\n      principle: 'shitcode rule one: use variable name with no actual meaning',\n      realPrinciple: 'coding rule one: use variable with valid meaning',\n      options: [{\n        optionId: 1,\n        content: 'int i = 0',\n      },\n        {optionId: 2,\n          content: 'int numOfStudent = 0',\n        }],\n      correctId: 2,\n      historyCorrectNum: 5,\n      historyAnswerNum: 10\n    };\n\n  constructor( private dataService: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n  getNextQuestion(): void {\n    this.dataService.getAll(2).subscribe(\n      data => {\n        this.data = data;\n        console.log(data);\n      },\n      error => {\n        console.log(error);\n      }\n    );\n  }\n\n  // tslint:disable-next-line:typedef\n  checkAnswer() {\n    this.flag = 2;\n    alert('thanks for answer');\n    const elementById = document.getElementById('principle');\n    if (elementById != null){\n      elementById.innerHTML = this.data.realPrinciple;\n    }\n  }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div>\n  <p>welcome to shit-code, click to start</p>\n\n  <button type=\"button\" [routerLink]=\" ['/question']\">\n    start here\n  </button>\n</div>\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError, retry } from 'rxjs/operators';\nimport { map, filter, switchMap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n\n  private REST_API_QUESTION = 'http://localhost:3000/api/question?id=';\n  private REST_API_REPORT = 'http://localhost:3000/api/report?correctNum=';\n\n  constructor(private httpClient: HttpClient) { }\n\n\n  public getAll(id: number){\n    const url = this.REST_API_QUESTION + id;\n    return this.httpClient.get(url);\n  }\n\n  public getReport(correctNum: number){\n    const url = this.REST_API_REPORT + correctNum;\n    return this.httpClient.get(url);\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'shitcode';\n}\n","<router-outlet></router-outlet>\n","import { Component, OnInit } from '@angular/core';\nimport { DataService } from '../../data.service';\n\n@Component({\n  selector: 'app-report',\n  templateUrl: './report.component.html',\n  styleUrls: ['./report.component.css']\n})\nexport class ReportComponent implements OnInit {\n\n  public data: any =  {\n    correctNum: 5,\n    accuracy: 50,\n    badge: 'Try harder'\n  };\n\n  constructor(private dataService: DataService) { }\n\n  ngOnInit(): void {\n  }\n\n\n  retrieveData(): void {\n    this.dataService.getReport(2).subscribe(\n      data => {\n        this.data = data;\n        console.log(data);\n      },\n      error => {\n        console.log(error);\n      });\n  }\n\n}\n","<p>report works!</p>\n\n<button type=\"button\" routerLink=\"/question\">review answers</button>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport {HttpClientModule} from '@angular/common/http';\nimport {DataService} from './data.service';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { WelcomeComponent } from './components/welcome/welcome.component';\nimport { QuestionComponent } from './components/question/question.component';\nimport { ReportComponent } from './components/report/report.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WelcomeComponent,\n    QuestionComponent,\n    ReportComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport {WelcomeComponent} from './components/welcome/welcome.component';\nimport {ReportComponent} from './components/report/report.component';\nimport {QuestionComponent} from './components/question/question.component';\n\nconst routes: Routes = [\n  {path: 'question', component: QuestionComponent},\n  {path: 'report', component: ReportComponent},\n  {path: '**', component: WelcomeComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}