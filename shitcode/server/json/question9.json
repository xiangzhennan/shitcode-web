{
  "questionId":9,
  "principle": "shitcode type nine: No types specified and/or no type checks if language allows you to do so",
  "realPrinciple": "coding rule nine: Always specify types and/or do type checks",
  "options": [{
    "optionId": 1,
    "content": "function sum(a: number, b: number): ?number {\n  // Covering the case when we don't do translation and/or Flow type checks in JS.\n  if (typeof a !== 'number' && typeof b !== 'number') {\n    return undefined;\n  }\n  return a + b;\n}\n\n// This one should fail during the translation/compilation.\nconst guessWhat = sum([], {}); // -> undefined"
  },
    {"optionId": 2,
      "content": "function sum(a, b) {\n  return a + b;\n}\n\n// Having untyped fun here.\nconst guessWhat = sum([], {}); // -> \"[object Object]\"\nconst guessWhatAgain = sum({}, []); // -> 0"
    }],
  "correctId":2,
  "historyCorrectNum": 0,
  "historyAnswerNum": 0
}
